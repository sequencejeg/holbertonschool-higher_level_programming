>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]
>>> matrix = [[4, 5, 0]]
>>> matrix_divided(matrix, 1)
[[4.0, 5.0, 0.0]]
>>> matrix = [[4, 5, 0]]
>>> matrix_divided(matrix, "s")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix = [[4, 5, 0]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided(2, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix = [[4, 5, 0], [2, 3]]
>>> matrix_divided(matrix, 4)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix = [[4, 5,]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0]]
>>> matrix_divided([[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
